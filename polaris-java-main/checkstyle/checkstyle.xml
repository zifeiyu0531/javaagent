<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE module PUBLIC "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">

    <!--<module name="com.tencent.checks.LicenseCheck" />-->
    <!--<module name="com.tencent.checks.FileEncodingCheck" />-->
    <!--<module name="com.tencent.checks.LineSeparatorCheck" />-->


    <module name="Header">
        <property name="fileExtensions" value="java"/>
        <property name="id" value="header"/>
    </module>

    <!--
    <module name="JavadocPackage">
      <property name="allowLegacy" value="false" />
    </module>
    -->

    <module name="NewlineAtEndOfFile"/>
    <module name="Translation">
        <property name="requiredTranslations" value="de, fr, fi, es, pt, ja, tr, zh"/>
    </module>
    <module name="UniqueProperties"/>


    <module name="RegexpMultiline"/>
    <module name="RegexpMultiline">
        <property name="format" value="\r?\n[\t ]*\r?\n[\t ]*\r?\n"/>
        <property name="fileExtensions" value="java,xml,properties"/>
        <property name="message" value="Unnecessary consecutive lines"/>
    </module>
    <module name="RegexpMultiline">
        <property name="format" value="/\*\*\W+\* +\p{javaLowerCase}"/>
        <property name="fileExtensions" value="java"/>
        <property name="message"
                value="First sentence in a comment should start with a capital letter"/>
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="\s+$"/>
        <property name="minimum" value="0"/>
        <property name="maximum" value="0"/>
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="/\*\* +\p{javaLowerCase}"/>
        <property name="fileExtensions" value="java"/>
        <property name="message"
                value="First sentence in a comment should start with a capital letter"/>
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="^(?!(.*http|import)).{101,}$"/>
        <property name="fileExtensions" value="g, g4"/>
        <property name="message" value="Line should not be longer then 100 symbols"/>
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="^(?!(.*href=&quot;|.*http)).{101,}$"/>
        <property name="fileExtensions" value="xml, vm"/>
        <property name="message" value="Line should not be longer then 100 symbols"/>
    </module>
    <module name="RegexpOnFilename"/>
    <module name="RegexpOnFilename">
        <property name="folderPattern" value="[\\/]src[\\/]\w+[\\/]java[\\/]"/>
        <property name="fileNamePattern" value="\.java$"/>
        <property name="match" value="false"/>
        <message key="regexp.filepath.mismatch"
                value="Only java files should be located in the ''src/*/java'' folders."/>
    </module>
    <module name="RegexpOnFilename">
        <property name="folderPattern" value="[\\/]src[\\/]xdocs[\\/]"/>
        <property name="fileNamePattern" value="\.(xml)|(vm)$"/>
        <property name="match" value="false"/>
        <message key="regexp.filepath.mismatch"
                value="All files in the ''src/xdocs'' folder should have the ''xml'' or ''vm'' extension."/>
    </module>
    <module name="RegexpOnFilename">
        <property name="folderPattern" value="[\\/]src[\\/]it[\\/]java[\\/]"/>
        <property name="fileNamePattern"
                value="^((\w+com.tencent.polaris.plugin.router.nearby.test.NearbyRouterTest)|(\w+TestSupport)|(Abstract\w+))\.java$"/>
        <property name="match" value="false"/>
        <message key="regexp.filepath.mismatch"
                value="All files in the ''src/it/java'' folder                       should be named ''*com.tencent.polaris.plugin.router.nearby.test.NearbyRouterTest.java'' or ''Abstract*.java''."/>
    </module>


    <module name="FileLength">
        <property name="fileExtensions" value="java"/>
    </module>


    <module name="FileTabCharacter">
        <property name="eachLine" value="false"/>
    </module>

    <module name="TreeWalker">
        <!--
        <module name="com.tencent.checks.SpaceIndentationCheck">
          <property name="basicOffset" value="4" />
        </module>
        -->
        <!--
        <module name="com.tencent.checks.CommentRatioCheck">
          <property name="commentRatio" value="10" />
        </module>
        -->
        <!--
        <module name="MethodName">
          <property name="format" value="^[a-zA-Z0-9_]{1,35}$" />
          <message key="name.invalidPattern" value="Method name ''{0}'' must match pattern ''{1}''." />
        </module>
        -->
        <!--
        <module name="onesdk.HeaderComment" />
        <module name="onesdk.PackageNaming" />
        <module name="onesdk.InterfaceNaming" />
        <module name="onesdk.MethodNaming" />
        <module name="onesdk.MethodParamNaming" />
        <module name="onesdk.ClassMemberNaming" />
        <module name="onesdk.FinalMemberNaming" />
        <module name="onesdk.EnumNaming" />
        -->
        <!--
        <module name="JavadocMethod">
            <property name="tokens" value="METHOD_DEF" />
        </module>
        -->
        <module name="JavadocType">
            <property name="tokens" value="INTERFACE_DEF,CLASS_DEF"/>
        </module>
        <property name="tabWidth" value="4"/>


        <module name="AnnotationLocation">
            <property name="tokens" value="ANNOTATION_DEF"/>
            <property name="tokens" value="ANNOTATION_FIELD_DEF"/>
            <property name="allowSamelineSingleParameterlessAnnotation" value="false"/>
        </module>
        <module name="AnnotationLocation">
            <property name="tokens" value="PARAMETER_DEF"/>
            <property name="allowSamelineMultipleAnnotations" value="true"/>
        </module>
        <module name="AnnotationOnSameLine">

            <property name="severity" value="ignore"/>
            <property name="tokens" value="METHOD_DEF"/>
            <property name="tokens" value="CTOR_DEF"/>
            <property name="tokens" value="TYPECAST"/>
            <property name="tokens" value="DOT"/>
            <property name="tokens" value="CLASS_DEF"/>
            <property name="tokens" value="ENUM_DEF"/>
            <property name="tokens" value="INTERFACE_DEF"/>
            <property name="tokens" value="TYPE_ARGUMENT"/>
            <property name="tokens" value="ANNOTATION_DEF"/>
            <property name="tokens" value="LITERAL_NEW"/>
            <property name="tokens" value="LITERAL_THROWS"/>
            <property name="tokens" value="VARIABLE_DEF"/>
            <property name="tokens" value="PARAMETER_DEF"/>
            <property name="tokens" value="IMPLEMENTS_CLAUSE"/>
            <property name="tokens" value="ANNOTATION_FIELD_DEF"/>
        </module>
        <module name="AnnotationUseStyle"/>
        <module name="MissingDeprecated"/>
        <module name="MissingOverride">
            <property name="javaFiveCompatibility" value="true"/>
        </module>
        <module name="PackageAnnotation"/>
        <module name="SuppressWarnings">
            <property name="format" value="^((?!unchecked|deprecation|rawtypes|resource).)*$"/>
            <message key="suppressed.warning.not.allowed"
                    value="The warning ''{0}'' cannot be suppressed at this location.              Only few javac warnings are allowed to suppress.              If try to suppress checkstyle/pmd/..... violation please do this in their config file.              If you try to suppress IntelliJ IDEA inspection,              please use javadoc block tag @noinspection"/>
        </module>
        <module name="AvoidNestedBlocks">
            <property name="allowInSwitchCase" value="true"/>
        </module>
        <module name="EmptyBlock">
            <property name="tokens" value="LITERAL_CATCH"/>
            <property name="tokens" value="ARRAY_INIT"/>
            <property name="tokens" value="LITERAL_DEFAULT"/>
            <property name="tokens" value="LITERAL_CASE"/>
            <property name="tokens" value="INSTANCE_INIT"/>
            <property name="tokens" value="LITERAL_DO"/>
            <property name="tokens" value="LITERAL_ELSE"/>
            <property name="tokens" value="LITERAL_FINALLY"/>
            <property name="tokens" value="LITERAL_FOR"/>
            <property name="tokens" value="LITERAL_IF"/>
            <property name="tokens" value="LITERAL_SWITCH"/>
            <property name="tokens" value="LITERAL_SYNCHRONIZED"/>
            <property name="tokens" value="LITERAL_TRY"/>
            <property name="tokens" value="LITERAL_WHILE"/>
            <property name="tokens" value="STATIC_INIT"/>
            <property name="option" value="text"/>
        </module>
        <module name="EmptyCatchBlock"/>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="NeedBraces">
            <property name="tokens" value="LAMBDA"/>
            <property name="allowSingleLineStatement" value="true"/>
        </module>
        <!--
        <module name="RightCurly">
          <property name="tokens" value="METHOD_DEF" />
          <property name="tokens" value="CTOR_DEF" />
          <property name="tokens" value="CLASS_DEF" />
          <property name="tokens" value="INSTANCE_INIT" />
          <property name="tokens" value="LITERAL_FOR" />
          <property name="tokens" value="STATIC_INIT" />
          <property name="tokens" value="LITERAL_WHILE" />
          <property name="tokens" value="LITERAL_CATCH" />
          <property name="tokens" value="LITERAL_ELSE" />
          <property name="tokens" value="LITERAL_FINALLY" />
          <property name="tokens" value="LITERAL_IF" />
          <property name="tokens" value="LITERAL_TRY" />
          <property name="option" value="alone" />
        </module>
        -->
        <!--
        <module name="RightCurly">
          <property name="tokens" value="LITERAL_DO" />
          <property name="option" value="same" />
        </module>
        -->
        <!--
        <module name="DesignForExtension">
          <property name="ignoredAnnotations" value="Override, com.tencent.polaris.plugin.router.nearby.test.NearbyRouterTest, Before, After, BeforeClass, AfterClass" />
        </module>
        -->
        <module name="FinalClass"/>
        <!--    <module name="HideUtilityClassConstructor" /> -->
        <module name="InnerTypeLast"/>
        <module name="InterfaceIsType"/>
        <module name="MutableException"/>
        <module name="OneTopLevelClass"/>
        <module name="ThrowsCount">
            <property name="max" value="2"/>
        </module>
        <!-- <module name="VisibilityModifier" /> -->


        <module name="ArrayTrailingComma"/>
        <!--<module name="AvoidInlineConditionals" /> -->
        <module name="CovariantEquals"/>
        <module name="DeclarationOrder"/>
        <module name="DefaultComesLast"/>
        <module name="EmptyStatement"/>
        <module name="EqualsAvoidNull"/>
        <module name="EqualsHashCode"/>
        <module name="ExplicitInitialization"/>
        <module name="FallThrough"/>
        <!--  <module name="FinalLocalVariable" />
        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true" />
            <property name="ignoreSetter" value="true" />
            <property name="setterCanReturnItsClass" value="true" />
        </module>
        <module name="IllegalCatch">
            <property name="illegalClassNames" value="java.lang.Exception,                          java.lang.Throwable,                          java.lang.RuntimeException,                          java.lang.NullPointerException" />
        </module>
        -->
        <module name="IllegalInstantiation">
            <property name="classes"
                    value="org.xml.sax.SAXException, org.xml.sax.SAXParseException,                          org.apache.commons.beanutils.ConversionException,                          org.antlr.v4.runtime.misc.ParseCancellationException,                          antlr.RecognitionException, antlr.TokenStreamException,                          antlr.TokenStreamRecognitionException, antlr.ANTLRException"/>
        </module>
        <module name="IllegalThrows"/>
        <module name="IllegalToken">
            <property name="tokens" value="LABELED_STAT"/>
        </module>
        <module name="IllegalTokenText">
            <property name="tokens" value="STRING_LITERAL"/>
            <property name="format" value="^(US-ASCII|ISO-8859-1|UTF-8|UTF-16BE|UTF-16LE|UTF-16)$"/>
            <property name="ignoreCase" value="true"/>
        </module>
        <module name="IllegalType"/>
        <module name="InnerAssignment"/>
        <module name="MagicNumber"/>
        <module name="MissingCtor">

            <property name="severity" value="ignore"/>
        </module>
        <module name="MissingSwitchDefault"/>
        <module name="ModifiedControlVariable"/>
        <!--  <module name="MultipleStringLiterals" /> -->
        <module name="MultipleVariableDeclarations"/>
        <module name="NestedForDepth">
            <property name="max" value="2"/>
        </module>
        <module name="NestedIfDepth">
            <property name="max" value="3"/>
        </module>
        <module name="NestedTryDepth"/>
        <module name="NoClone"/>
        <module name="NoFinalizer"/>
        <module name="OneStatementPerLine"/>
        <module name="OverloadMethodsDeclarationOrder"/>
        <module name="PackageDeclaration"/>
        <module name="ParameterAssignment"/>
        <module name="RequireThis"/>
        <module name="ReturnCount">
            <property name="max" value="1"/>
            <property name="maxForVoid" value="0"/>
        </module>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="SuperClone"/>
        <module name="SuperFinalize"/>
        <module name="UnnecessaryParentheses"/>
        <module name="VariableDeclarationUsageDistance"/>


        <module name="AvoidStarImport"/>
        <module name="AvoidStaticImport"/>
        <!-- <module name="CustomImportOrder">
           <property name="customImportOrderRules" value="STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS" />
           <property name="specialImportsRegExp" value="^org\." />
           <property name="sortImportsInGroupAlphabetically" value="true" />
           <property name="separateLineBetweenGroups" value="true" />
         </module>
         -->
        <module name="IllegalImport"/>
        <module name="ImportControl">
            <property name="id" value="ImportControlMain"/>
            <property name="path" value="^.*[\\/]src[\\/]main[\\/].*$"/>
        </module>
        <module name="ImportControl">
            <property name="id" value="ImportControlTest"/>
            <property name="path" value="^.*[\\/]src[\\/]test[\\/].*$"/>
        </module>
        <!--
        <module name="ImportOrder">
          <property name="groups" value="/^java\./,javax,org" />
          <property name="ordered" value="true" />
          <property name="separated" value="true" />
          <property name="option" value="top" />
          <property name="sortStaticImportsAlphabetically" value="true" />
        </module>
        -->
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>


        <module name="AtclauseOrder"/>
        <module name="JavadocParagraph"/>
        <module name="JavadocStyle">
            <property name="scope" value="public"/>
        </module>
        <module name="JavadocTagContinuationIndentation"/>
        <!--  <module name="JavadocVariable" /> -->
        <module name="NonEmptyAtclauseDescription"/>
        <module name="SingleLineJavadoc"/>
        <module name="WriteTag"/>
        <module name="SummaryJavadoc"/>


        <module name="BooleanExpressionComplexity">
            <property name="max" value="7"/>
        </module>
        <module name="ClassDataAbstractionCoupling">

            <property name="excludedClasses"
                    value="boolean, byte, char, double, float, int, long, short, void,                          Boolean, Byte, Character, Double, Float, Integer, Long, Short, Void,                          Object, Class, String, StringBuffer, StringBuilder,                          ArrayIndexOutOfBoundsException, Exception, RuntimeException,                          IllegalArgumentException, IllegalStateException,                          IndexOutOfBoundsException, NullPointerException, Throwable,                          SecurityException, UnsupportedOperationException, List, ArrayList,                          Deque, Queue, LinkedList, Set, HashSet, SortedSet, TreeSet, Map,                          HashMap, SortedMap, TreeMap, DetailsAST, CheckstyleException,                          UnsupportedEncodingException, BuildException, ConversionException,                          FileNotFoundException, TestException"/>
        </module>
        <module name="ClassFanOutComplexity">
            <property name="max" value="25"/>

            <property name="excludedClasses"
                    value="boolean, byte, char, double, float, int, long, short,                          void, Boolean, Byte, Character, Double, Float, Integer,                          Long, Short, Void, Object, Class, String, StringBuffer,                          StringBuilder, ArrayIndexOutOfBoundsException, Exception,                          RuntimeException, IllegalArgumentException, IllegalStateException,                          IndexOutOfBoundsException, NullPointerException, Throwable,                          SecurityException, UnsupportedOperationException, List, ArrayList,                          Deque, Queue, LinkedList, Set, HashSet, SortedSet, TreeSet, Map,                          HashMap, SortedMap, TreeMap, DetailsAST, CheckstyleException,                          UnsupportedEncodingException, BuildException, ConversionException,                          FileNotFoundException, TestException, Log, Sets, Multimap,                          TokenStreamRecognitionException, RecognitionException,                          TokenStreamException, IOException, Override, Deprecated, SafeVarargs,                          SuppressWarnings, FunctionalInterface"/>
        </module>
        <module name="CyclomaticComplexity">
            <property name="switchBlockAsSingleDecisionPoint" value="true"/>
        </module>
        <module name="JavaNCSS"/>
        <module name="NPathComplexity"/>


        <module name="ArrayTypeStyle"/>
        <module name="AvoidEscapedUnicodeCharacters">
            <property name="allowIfAllCharactersEscaped" value="true"/>
        </module>
        <module name="CommentsIndentation"/>
        <module name="DescendantToken"/>
        <module name="FinalParameters">

            <property name="severity" value="ignore"/>
        </module>
        <module name="OuterTypeFilename"/>
        <module name="TodoComment">
            <property name="format" value="(TODO)|(FIXME)"/>
        </module>
        <module name="TrailingComment"/>
        <module name="UncommentedMain">
            <property name="excludedClasses" value="\.(Main|JavadocPropertiesGenerator)$"/>
        </module>
        <module name="UpperEll"/>


        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>
        <!-- <module name="AbbreviationAsWordInName">
          <property name="ignoreFinal" value="false" />
          <property name="allowedAbbreviationLength" value="0" />
          <property name="allowedAbbreviations" value="AST" />
        </module>
         -->
        <!-- <module name="AbstractClassName" /> -->
        <module name="ClassTypeParameterName"/>
        <module name="ConstantName"/>
        <module name="InterfaceTypeParameterName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName">
            <property name="format" value="^(id)|([a-z][a-z0-9][a-zA-Z0-9]+)$"/>
            <property name="allowOneCharVarInForLoop" value="true"/>
        </module>
        <module name="MemberName">
            <property name="format" value="^(id)|([a-z][a-z0-9][a-zA-Z0-9]+)$"/>
        </module>
        <module name="MethodTypeParameterName"/>
        <module name="PackageName"/>
        <module name="ParameterName">
            <property name="format" value="^(id)|([a-z][a-z0-9][a-zA-Z0-9]+)$"/>
            <property name="ignoreOverridden" value="true"/>
        </module>
        <module name="LambdaParameterName">
            <property name="format" value="^(id)|([a-z][a-z0-9][a-zA-Z0-9]+)$"/>
        </module>
        <!--
        <module name="CatchParameterName">
          <property name="format" value="^(ex|[a-z][a-z][a-zA-Z]+)$" />
        </module>
        -->
        <module name="StaticVariableName">
            <property name="format" value="^(id)|([a-z][a-z0-9][a-zA-Z0-9]+)$"/>
        </module>
        <module name="TypeName"/>


        <module name="Regexp"/>
        <module name="RegexpSinglelineJava"/>
        <module name="RegexpSinglelineJava">
            <property name="format" value="[^\p{ASCII}]"/>
            <property name="ignoreComments" value="true"/>
        </module>


        <module name="AnonInnerLength"/>
        <module name="ExecutableStatementCount">
            <property name="max" value="30"/>
        </module>
        <!--
        <module name="LineLength">
          <property name="max" value="120" />
          <property name="ignorePattern" value="^ *\* *([^ ]+|\{@code .*|&lt;a href.*)$" />
        </module>
        -->
        <module name="MethodCount">
            <property name="maxTotal" value="34"/>
        </module>
        <module name="MethodLength"/>
        <module name="OuterTypeNumber"/>
        <module name="ParameterNumber"/>


        <module name="EmptyForInitializerPad"/>
        <module name="EmptyForIteratorPad"/>
        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
            <property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>
        </module>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoLineWrap"/>
        <module name="NoWhitespaceAfter">
            <property name="tokens" value="ARRAY_INIT"/>
            <property name="tokens" value="AT"/>
            <property name="tokens" value="BNOT"/>
            <property name="tokens" value="DEC"/>
            <property name="tokens" value="DOT"/>
            <property name="tokens" value="INC"/>
            <property name="tokens" value="LNOT"/>
            <property name="tokens" value="UNARY_MINUS"/>
            <property name="tokens" value="UNARY_PLUS"/>
            <property name="tokens" value="ARRAY_DECLARATOR"/>
            <property name="tokens" value="INDEX_OP"/>
            <property name="tokens" value="METHOD_REF"/>
        </module>
        <module name="NoWhitespaceBefore"/>
        <module name="NoWhitespaceBefore">
            <property name="tokens" value="DOT"/>
            <property name="tokens" value="METHOD_REF"/>
            <property name="allowLineBreaks" value="true"/>
        </module>
        <module name="OperatorWrap">
            <property name="tokens" value="QUESTION"/>
            <property name="tokens" value="COLON"/>
            <property name="tokens" value="EQUAL"/>
            <property name="tokens" value="NOT_EQUAL"/>
            <property name="tokens" value="DIV"/>
            <property name="tokens" value="PLUS"/>
            <property name="tokens" value="MINUS"/>
            <property name="tokens" value="STAR"/>
            <property name="tokens" value="MOD"/>
            <property name="tokens" value="SR"/>
            <property name="tokens" value="BSR"/>
            <property name="tokens" value="GE"/>
            <property name="tokens" value="GT"/>
            <property name="tokens" value="SL"/>
            <property name="tokens" value="LE"/>
            <property name="tokens" value="LT"/>
            <property name="tokens" value="BXOR"/>
            <property name="tokens" value="BOR"/>
            <property name="tokens" value="LOR"/>
            <property name="tokens" value="BAND"/>
            <property name="tokens" value="LAND"/>
            <property name="tokens" value="TYPE_EXTENSION_AND"/>
            <property name="tokens" value="LITERAL_INSTANCEOF"/>
            <property name="tokens" value="METHOD_REF"/>
            <property name="option" value="nl"/>
        </module>
        <module name="OperatorWrap">
            <property name="tokens" value="ASSIGN"/>
            <property name="tokens" value="DIV_ASSIGN"/>
            <property name="tokens" value="PLUS_ASSIGN"/>
            <property name="tokens" value="MINUS_ASSIGN"/>
            <property name="tokens" value="STAR_ASSIGN"/>
            <property name="tokens" value="MOD_ASSIGN"/>
            <property name="tokens" value="SR_ASSIGN"/>
            <property name="tokens" value="BSR_ASSIGN"/>
            <property name="tokens" value="SL_ASSIGN"/>
            <property name="tokens" value="BXOR_ASSIGN"/>
            <property name="tokens" value="BOR_ASSIGN"/>
            <property name="tokens" value="BAND_ASSIGN"/>
            <property name="option" value="eol"/>
        </module>
        <module name="ParenPad"/>
        <module name="SeparatorWrap">
            <property name="tokens" value="DOT"/>
            <property name="tokens" value="AT"/>
            <property name="tokens" value="METHOD_REF"/>
            <property name="option" value="nl"/>
        </module>
        <module name="SeparatorWrap">
            <property name="tokens" value="COMMA"/>
            <property name="tokens" value="RBRACK"/>
            <property name="tokens" value="ARRAY_DECLARATOR"/>
            <property name="tokens" value="ELLIPSIS"/>
            <property name="tokens" value="SEMI"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="SingleSpaceSeparator">
            <property name="validateComments" value="false"/>
        </module>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>

    </module>

</module>